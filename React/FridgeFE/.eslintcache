[{"/Users/user/Desktop/Fridge/React/FridgeFE/src/index.js":"1","/Users/user/Desktop/Fridge/React/FridgeFE/src/App.js":"2","/Users/user/Desktop/Fridge/React/FridgeFE/src/reportWebVitals.js":"3","/Users/user/Desktop/Fridge/React/FridgeFE/src/Fridge.js":"4","/Users/user/Desktop/Fridge/React/FridgeFE/src/Results.js":"5","/Users/user/Desktop/Fridge/React/FridgeFE/src/Service.js":"6"},{"size":547,"mtime":1608519087273,"results":"7","hashOfConfig":"8"},{"size":607,"mtime":1608541976244,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1608280293300,"results":"10","hashOfConfig":"8"},{"size":2306,"mtime":1608543879784,"results":"11","hashOfConfig":"8"},{"size":994,"mtime":1608545302193,"results":"12","hashOfConfig":"8"},{"size":658,"mtime":1608541637315,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13t9csx",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/user/Desktop/Fridge/React/FridgeFE/src/index.js",[],"/Users/user/Desktop/Fridge/React/FridgeFE/src/App.js",["28"],"/Users/user/Desktop/Fridge/React/FridgeFE/src/reportWebVitals.js",[],["29","30"],"/Users/user/Desktop/Fridge/React/FridgeFE/src/Fridge.js",["31","32"],"import React from 'react';\nimport Results from './Results';\nimport { Input, Header, List, Icon, Transition, Button } from 'semantic-ui-react'\n\n\nclass Fridge extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            value: '',\n            ingredients: []\n        };\n        \n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n  \n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n  \n    handleSubmit(event) {\n        const newIngredients = [...this.state.ingredients, this.state.value];\n        this.setState({ingredients: newIngredients})\n        this.setState({value:''})\n    \n        event.preventDefault();\n    }\n\n    removeIngredient(ingredient) {\n        const ingredients = this.state.ingredients;\n\n        this.setState({\n            ingredients: ingredients.filter((i) => {\n                return i !== ingredient\n              }),\n        });\n    }\n\n    handleSearch() {\n        const ingredients = this.state.ingredients;\n        // send ingredients list to Results\n    }\n    \n    render() {\n\n        const ingredients = this.state.ingredients\n      \n        return (\n        <div>\n          <Header as='h3'> 냉장고 </Header>\n\n          <form onSubmit={this.handleSubmit}>\n          <Input \n            type=\"text\"\n            placeholder='재료추가'\n            value={this.state.value}\n            onChange={this.handleChange}\n          />\n          </form>\n\n          {/* TODO: Maybe change to labels? */}\n          <List selection verticalAlign='middle'>\n          <Transition.Group as={List} duration={200} divided size='medium' verticalAlign='middle'>\n              {ingredients.map((ingredient) => (\n                <List.Item>\n                  <Icon color='orange' name='minus circle' onClick={() => this.removeIngredient(ingredient)}/>\n                  <List.Content>\n                    <List.Header>{ingredient}</List.Header>\n                  </List.Content>\n                </List.Item>\n              ))}\n            </Transition.Group>\n          </List>\n\n          <Button compact color='green' onClick={() => this.handleSearch()}>레서피들 보기</Button>\n\n        </div>\n      );\n    }\n  }\n\nexport default Fridge;\n","/Users/user/Desktop/Fridge/React/FridgeFE/src/Results.js",[],"/Users/user/Desktop/Fridge/React/FridgeFE/src/Service.js",[],{"ruleId":"33","severity":1,"message":"34","line":3,"column":8,"nodeType":"35","messageId":"36","endLine":3,"endColumn":15},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"33","severity":1,"message":"41","line":2,"column":8,"nodeType":"35","messageId":"36","endLine":2,"endColumn":15},{"ruleId":"33","severity":1,"message":"42","line":41,"column":15,"nodeType":"35","messageId":"36","endLine":41,"endColumn":26},"no-unused-vars","'Service' is defined but never used.","Identifier","unusedVar","no-native-reassign",["43"],"no-negated-in-lhs",["44"],"'Results' is defined but never used.","'ingredients' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]