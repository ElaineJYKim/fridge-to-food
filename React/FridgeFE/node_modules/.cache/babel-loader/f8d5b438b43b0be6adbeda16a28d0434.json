{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/user/Desktop/Fridge/React/FridgeFE/src/Results.js\";\nimport React from 'react';\nimport { Item, Card, Image } from 'semantic-ui-react';\nimport './CSS/Results.css';\nimport loader from './Assets/loader.gif';\n\nclass Results extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.callApi = async () => {\n      const ingredients = this.state.ingredients;\n      const ingredientsString = ingredients.join(',');\n      const query = 'http://localhost:9000/?query='.concat(ingredientsString);\n      const response = await fetch(query);\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      return body;\n    };\n\n    const {\n      ingredients: _ingredients\n    } = this.props;\n    this.state = {\n      ingredients: _ingredients,\n      response: []\n    };\n  }\n\n  componentWillReceiveProps(props) {\n    const {\n      ingredients\n    } = props;\n    this.setState({\n      ingredients\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.ingredients !== this.state.ingredients) {\n      this.callApi().then(res => this.setState({\n        response: res.Recipes\n      })).catch(err => console.log(err));\n    }\n  }\n\n  render() {\n    const {\n      ingredients,\n      response\n    } = this.state;\n\n    if (response.length !== 0) {\n      return /*#__PURE__*/_jsxDEV(Item.Group, {\n        children: response.map(recipe => /*#__PURE__*/_jsxDEV(Item, {\n          children: [/*#__PURE__*/_jsxDEV(Item.Image, {\n            size: \"tiny\",\n            src: recipe.thumbnail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Item.Content, {\n            children: [/*#__PURE__*/_jsxDEV(Item.Header, {\n              children: [\" \", recipe.title, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Item.Description, {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                children: recipe.ingredients\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 44\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 16\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 12\n      }, this) //  <Card.Group>\n      //    {response.map(recipe => (\n      //    <Card>\n      //         <Image src={recipe.thumbnail} wrapped ui={false} />\n      //         <Card.Content>\n      //             <Card.Header> {recipe.title} </Card.Header>\n      //             <Card.Description> {recipe.ingredients} </Card.Description>\n      //         </Card.Content>\n      //         </Card>\n      //    ))}\n      // </Card.Group>\n      ;\n    } else if (ingredients.length !== 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: loader,\n          alt: \"loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 12\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n}\n\nexport default Results;","map":{"version":3,"sources":["/Users/user/Desktop/Fridge/React/FridgeFE/src/Results.js"],"names":["React","Item","Card","Image","loader","Results","Component","constructor","props","callApi","ingredients","state","ingredientsString","join","query","concat","response","fetch","body","json","status","Error","message","componentWillReceiveProps","setState","componentDidUpdate","prevProps","prevState","then","res","Recipes","catch","err","console","log","render","length","map","recipe","thumbnail","title"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Item, Card, Image } from 'semantic-ui-react';\nimport './CSS/Results.css';\nimport loader from './Assets/loader.gif';\n\nclass Results extends React.Component {\n    constructor(props) {\n        super(props);\n        const { ingredients } = this.props;\n        this.state = {\n            ingredients,\n            response: [],\n        };\n    }\n\n    componentWillReceiveProps(props) {\n        const { ingredients } = props;\n        this.setState({ ingredients });\n      }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.ingredients!== this.state.ingredients) {\n            this.callApi()\n            .then(res => this.setState({ response: res.Recipes }))\n            .catch(err => console.log(err));\n        }\n    }\n\n    callApi = async () => {\n        const ingredients = this.state.ingredients\n        const ingredientsString = ingredients.join(',')\n        const query = 'http://localhost:9000/?query='.concat(ingredientsString)\n        \n        const response = await fetch(query);\n        const body = await response.json();\n        if (response.status !== 200) throw Error(body.message);\n        \n        return body;\n      };\n\n    render() {\n       const {ingredients, response} = this.state\n       \n       if (response.length !== 0) {\n           return (\n           <Item.Group>\n               {response.map(recipe => (\n               <Item>\n                    <Item.Image size='tiny' src={recipe.thumbnail} />\n\n                    <Item.Content>\n                        <Item.Header> {recipe.title} </Item.Header>\n                        <Item.Description> <p>{recipe.ingredients}</p> </Item.Description>\n                    </Item.Content>\n                </Item>\n               ))}\n           </Item.Group>\n            //  <Card.Group>\n            //    {response.map(recipe => (\n            //    <Card>\n            //         <Image src={recipe.thumbnail} wrapped ui={false} />\n\n            //         <Card.Content>\n            //             <Card.Header> {recipe.title} </Card.Header>\n            //             <Card.Description> {recipe.ingredients} </Card.Description>\n            //         </Card.Content>\n            //         </Card>\n            //    ))}\n            // </Card.Group>\n            \n           )\n       } else if (ingredients.length !== 0){\n           return(\n           <div><img src={loader} alt=\"loading...\" /></div>\n           )\n       } else {\n        return(\n            <div></div>\n            )\n       }\n    }\n}\n\n\nexport default Results;"]},"metadata":{},"sourceType":"module"}