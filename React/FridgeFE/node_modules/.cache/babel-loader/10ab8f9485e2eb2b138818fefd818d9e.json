{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/user/Desktop/Fridge/React/FridgeFE/src/Results.js\";\nimport React from 'react';\nimport { Header } from 'semantic-ui-react';\n\nclass Results extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.callApi = async () => {\n      const response = await fetch('/api/hello');\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      return body;\n    };\n\n    this.state = {\n      ingredients: ['양파', '버섯', '파', '김치'],\n      recipes: []\n    };\n  } // const ingredients = this.state.ingredients\n  // const ingredientsString = ingredients.join(',')\n  // const url = '/?query='.concat(ingredientsString)\n  // fetch(url)\n  //    .then((result) => result.json())\n  //    .then(response => {\n  //     this.setState({recipes: response})\n  //   })\n  //   .catch(console.log)\n\n\n  componentDidMount() {\n    const ingredients = this.state.ingredients;\n    const ingredientsString = ingredients.join(',');\n    const url = '/?query='.concat(ingredientsString);\n    fetch(url).then(result => result.json()).then(response => {\n      this.setState({\n        recipes: response\n      });\n    }).catch(console.log);\n  }\n\n  render() {\n    const ingredients = this.state.ingredients;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        as: \"h3\",\n        children: \" Recipes \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this), ingredients.map(i => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: i\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default Results;","map":{"version":3,"sources":["/Users/user/Desktop/Fridge/React/FridgeFE/src/Results.js"],"names":["React","Header","Results","Component","constructor","props","callApi","response","fetch","body","json","status","Error","message","state","ingredients","recipes","componentDidMount","ingredientsString","join","url","concat","then","result","setState","catch","console","log","render","map","i"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,mBAAvB;;AAEA,MAAMC,OAAN,SAAsBF,KAAK,CAACG,SAA5B,CAAsC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAgCnBC,OAhCmB,GAgCT,YAAY;AAElB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,UAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B,MAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AAE7B,aAAOJ,IAAP;AACD,KAvCgB;;AAEf,SAAKK,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,GAAb,EAAkB,IAAlB,CADJ;AAETC,MAAAA,OAAO,EAAE;AAFA,KAAb;AAIH,GAPiC,CASlC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,iBAAiB,GAAG;AAChB,UAAMF,WAAW,GAAG,KAAKD,KAAL,CAAWC,WAA/B;AACA,UAAMG,iBAAiB,GAAGH,WAAW,CAACI,IAAZ,CAAiB,GAAjB,CAA1B;AACA,UAAMC,GAAG,GAAG,WAAWC,MAAX,CAAkBH,iBAAlB,CAAZ;AAEAV,IAAAA,KAAK,CAACY,GAAD,CAAL,CACIE,IADJ,CACUC,MAAD,IAAYA,MAAM,CAACb,IAAP,EADrB,EAEIY,IAFJ,CAESf,QAAQ,IAAI;AACjB,WAAKiB,QAAL,CAAc;AAACR,QAAAA,OAAO,EAAET;AAAV,OAAd;AACD,KAJH,EAKGkB,KALH,CAKSC,OAAO,CAACC,GALjB;AAMH;;AAWDC,EAAAA,MAAM,GAAG;AACN,UAAMb,WAAW,GAAG,KAAKD,KAAL,CAAWC,WAA/B;AACD,wBACI;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKA,WAAW,CAACc,GAAZ,CAAiBC,CAAD,iBACb;AAAA,kBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,cADH,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQD;;AApDiC;;AAwDtC,eAAe5B,OAAf","sourcesContent":["import React from 'react';\nimport { Header } from 'semantic-ui-react'\n\nclass Results extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ingredients: ['양파', '버섯', '파', '김치'],\n            recipes: []\n        };\n    }\n\n    // const ingredients = this.state.ingredients\n    // const ingredientsString = ingredients.join(',')\n    // const url = '/?query='.concat(ingredientsString)\n\n    // fetch(url)\n    //    .then((result) => result.json())\n    //    .then(response => {\n    //     this.setState({recipes: response})\n    //   })\n    //   .catch(console.log)\n\n    componentDidMount() {\n        const ingredients = this.state.ingredients\n        const ingredientsString = ingredients.join(',')\n        const url = '/?query='.concat(ingredientsString)\n\n        fetch(url)\n           .then((result) => result.json())\n           .then(response => {\n            this.setState({recipes: response})\n          })\n          .catch(console.log)\n    }\n\n    callApi = async () => {\n        \n        const response = await fetch('/api/hello');\n        const body = await response.json();\n        if (response.status !== 200) throw Error(body.message);\n        \n        return body;\n      };\n\n    render() {\n       const ingredients = this.state.ingredients\n      return (\n          <div>\n              <Header as='h3'> Recipes </Header>\n              {ingredients.map((i) =>(\n                  <p>{i}</p>\n              ))}\n          </div>\n      )\n    }\n}\n\n\nexport default Results;\n"]},"metadata":{},"sourceType":"module"}