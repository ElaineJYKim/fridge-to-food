{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/user/Desktop/Fridge/React/FridgeFE/src/Results.js\";\nimport React from 'react';\nimport { Item, Card } from 'semantic-ui-react';\nimport './CSS/Results.css';\nimport loader from './Assets/loader.gif';\n\nclass Results extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.callApi = async () => {\n      const ingredients = this.state.ingredients;\n      const ingredientsString = ingredients.join(',');\n      const query = 'http://localhost:9000/?query='.concat(ingredientsString);\n      const response = await fetch(query);\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      return body;\n    };\n\n    const {\n      ingredients: _ingredients\n    } = this.props;\n    this.state = {\n      ingredients: _ingredients,\n      response: []\n    };\n  }\n\n  componentWillReceiveProps(props) {\n    const {\n      ingredients\n    } = props;\n    this.setState({\n      ingredients\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.ingredients !== this.state.ingredients) {\n      this.callApi().then(res => this.setState({\n        response: res.Recipes\n      })).catch(err => console.log(err));\n    }\n  }\n\n  render() {\n    const {\n      ingredients,\n      response\n    } = this.state;\n\n    if (response.length !== 0) {\n      return (\n        /*#__PURE__*/\n        //    <Item.Group>\n        //        {response.map(recipe => (\n        //        <Item><a href={recipe.link}>\n        //             <Item.Image size='tiny' src={recipe.thumbnail} />\n        //             <Item.Content>\n        //                 <Item.Header> {recipe.title} </Item.Header>\n        //                 <Item.Description> {recipe.ingredients} </Item.Description>\n        //             </Item.Content>\n        //             </a></Item>\n        //        ))}\n        //    </Item.Group>\n        _jsxDEV(Card.Group, {\n          children: response.map(recipe => /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: recipe.link,\n              children: [/*#__PURE__*/_jsxDEV(Image, {\n                src: recipe.thumbnail,\n                wrapped: true,\n                ui: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n                children: [/*#__PURE__*/_jsxDEV(Item.Header, {\n                  children: [\" \", recipe.title, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Item.Description, {\n                  children: [\" \", recipe.ingredients, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 14\n        }, this)\n      );\n    } else if (ingredients.length !== 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: loader,\n          alt: \"loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 12\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n}\n\nexport default Results;","map":{"version":3,"sources":["/Users/user/Desktop/Fridge/React/FridgeFE/src/Results.js"],"names":["React","Item","Card","loader","Results","Component","constructor","props","callApi","ingredients","state","ingredientsString","join","query","concat","response","fetch","body","json","status","Error","message","componentWillReceiveProps","setState","componentDidUpdate","prevProps","prevState","then","res","Recipes","catch","err","console","log","render","length","map","recipe","link","thumbnail","title"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Item, Card } from 'semantic-ui-react';\nimport './CSS/Results.css';\nimport loader from './Assets/loader.gif';\n\nclass Results extends React.Component {\n    constructor(props) {\n        super(props);\n        const { ingredients } = this.props;\n        this.state = {\n            ingredients,\n            response: [],\n        };\n    }\n\n    componentWillReceiveProps(props) {\n        const { ingredients } = props;\n        this.setState({ ingredients });\n      }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.ingredients!== this.state.ingredients) {\n            this.callApi()\n            .then(res => this.setState({ response: res.Recipes }))\n            .catch(err => console.log(err));\n        }\n    }\n\n    callApi = async () => {\n        const ingredients = this.state.ingredients\n        const ingredientsString = ingredients.join(',')\n        const query = 'http://localhost:9000/?query='.concat(ingredientsString)\n        \n        const response = await fetch(query);\n        const body = await response.json();\n        if (response.status !== 200) throw Error(body.message);\n        \n        return body;\n      };\n\n    render() {\n       const {ingredients, response} = this.state\n       \n       if (response.length !== 0) {\n           return (\n        //    <Item.Group>\n        //        {response.map(recipe => (\n        //        <Item><a href={recipe.link}>\n        //             <Item.Image size='tiny' src={recipe.thumbnail} />\n\n        //             <Item.Content>\n        //                 <Item.Header> {recipe.title} </Item.Header>\n        //                 <Item.Description> {recipe.ingredients} </Item.Description>\n        //             </Item.Content>\n        //             </a></Item>\n        //        ))}\n        //    </Item.Group>\n             <Card.Group>\n               {response.map(recipe => (\n               <Card><a href={recipe.link}>\n                    <Image src={recipe.thumbnail} wrapped ui={false} />\n\n                    <Card.Content>\n                        <Item.Header> {recipe.title} </Item.Header>\n                        <Item.Description> {recipe.ingredients} </Item.Description>\n                    </Card.Content>\n                    </a></Card>\n               ))}\n            </Card.Group>\n            \n           )\n       } else if (ingredients.length !== 0){\n           return(\n           <div><img src={loader} alt=\"loading...\" /></div>\n           )\n       } else {\n        return(\n            <div></div>\n            )\n       }\n    }\n}\n\n\nexport default Results;"]},"metadata":{},"sourceType":"module"}