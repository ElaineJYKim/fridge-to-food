{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/user/Desktop/Fridge/React/FridgeFE/src/Results.js\";\nimport React from 'react';\nimport { Header } from 'semantic-ui-react';\n\nclass Results extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.callApi = async () => {\n      const ingredients = this.state.ingredients;\n      const ingredientsString = ingredients.join(',');\n      const query = 'http://localhost:9000/?query='.concat(ingredientsString);\n      const response = await fetch(query);\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      return body;\n    };\n\n    this.state = {\n      ingredients: ['양파', '버섯', '김치'],\n      recipes: []\n    };\n  } // const ingredients = this.state.ingredients\n  // const ingredientsString = ingredients.join(',')\n  // const url = '/?query='.concat(ingredientsString)\n  // fetch(url)\n  //    .then((result) => result.json())\n  //    .then(response => {\n  //     this.setState({recipes: response})\n  //   })\n  //   .catch(console.log)\n\n\n  componentDidMount() {\n    this.callApi().then(res => this.setState({\n      response: res.Recipes\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    const ingredients = this.state.ingredients;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        as: \"h3\",\n        children: \" Recipes \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, this), ingredients.map(i => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: i\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default Results;","map":{"version":3,"sources":["/Users/user/Desktop/Fridge/React/FridgeFE/src/Results.js"],"names":["React","Header","Results","Component","constructor","props","callApi","ingredients","state","ingredientsString","join","query","concat","response","fetch","body","json","status","Error","message","recipes","componentDidMount","then","res","setState","Recipes","catch","err","console","log","render","map","i"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,mBAAvB;;AAEA,MAAMC,OAAN,SAAsBF,KAAK,CAACG,SAA5B,CAAsC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAyBnBC,OAzBmB,GAyBT,YAAY;AAClB,YAAMC,WAAW,GAAG,KAAKC,KAAL,CAAWD,WAA/B;AACA,YAAME,iBAAiB,GAAGF,WAAW,CAACG,IAAZ,CAAiB,GAAjB,CAA1B;AACA,YAAMC,KAAK,GAAG,gCAAgCC,MAAhC,CAAuCH,iBAAvC,CAAd;AAEA,YAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACH,KAAD,CAA5B;AACA,YAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,UAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B,MAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AAE7B,aAAOJ,IAAP;AACD,KAnCgB;;AAEf,SAAKP,KAAL,GAAa;AACTD,MAAAA,WAAW,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CADJ;AAETa,MAAAA,OAAO,EAAE;AAFA,KAAb;AAIH,GAPiC,CASlC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,iBAAiB,GAAG;AAChB,SAAKf,OAAL,GACCgB,IADD,CACMC,GAAG,IAAI,KAAKC,QAAL,CAAc;AAAEX,MAAAA,QAAQ,EAAEU,GAAG,CAACE;AAAhB,KAAd,CADb,EAECC,KAFD,CAEOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFd;AAGH;;AAcDG,EAAAA,MAAM,GAAG;AACN,UAAMvB,WAAW,GAAG,KAAKC,KAAL,CAAWD,WAA/B;AACD,wBACI;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKA,WAAW,CAACwB,GAAZ,CAAiBC,CAAD,iBACb;AAAA,kBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,cADH,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQD;;AAhDiC;;AAoDtC,eAAe9B,OAAf","sourcesContent":["import React from 'react';\nimport { Header } from 'semantic-ui-react'\n\nclass Results extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ingredients: ['양파', '버섯', '김치'],\n            recipes: []\n        };\n    }\n\n    // const ingredients = this.state.ingredients\n    // const ingredientsString = ingredients.join(',')\n    // const url = '/?query='.concat(ingredientsString)\n\n    // fetch(url)\n    //    .then((result) => result.json())\n    //    .then(response => {\n    //     this.setState({recipes: response})\n    //   })\n    //   .catch(console.log)\n\n    componentDidMount() {\n        this.callApi()\n        .then(res => this.setState({ response: res.Recipes }))\n        .catch(err => console.log(err));\n    }\n\n    callApi = async () => {\n        const ingredients = this.state.ingredients\n        const ingredientsString = ingredients.join(',')\n        const query = 'http://localhost:9000/?query='.concat(ingredientsString)\n        \n        const response = await fetch(query);\n        const body = await response.json();\n        if (response.status !== 200) throw Error(body.message);\n        \n        return body;\n      };\n\n    render() {\n       const ingredients = this.state.ingredients\n      return (\n          <div>\n              <Header as='h3'> Recipes </Header>\n              {ingredients.map((i) =>(\n                  <p>{i}</p>\n              ))}\n          </div>\n      )\n    }\n}\n\n\nexport default Results;\n"]},"metadata":{},"sourceType":"module"}