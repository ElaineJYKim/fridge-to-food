{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/user/Desktop/Fridge/React/FridgeFE/src/Results.js\";\nimport React from 'react';\nimport { Header, List, Item } from 'semantic-ui-react';\n\nclass Results extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.callApi = async () => {\n      const ingredients = this.state.ingredients;\n      const ingredientsString = ingredients.join(',');\n      const query = 'http://localhost:9000/?query='.concat(ingredientsString);\n      const response = await fetch(query);\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      return body;\n    };\n\n    this.state = {\n      ingredients: ['양파', '버섯', '김치'],\n      response: []\n    };\n  } // componentDidMount() {\n  //     const ingredients = this.state.ingredients\n  //     const ingredientsString = ingredients.join(',')\n  //     const url = 'http://localhost:9000/?query='.concat(ingredientsString)\n  //     fetch(url)\n  //        .then((result) => result.json())\n  //        .then(response => {\n  //         this.setState({response: response.Recipes})\n  //       })\n  //       .catch(err => {\n  //         console.log(err);\n  //       }); \n  // }\n\n\n  componentDidMount() {\n    this.callApi().then(res => this.setState({\n      response: res.Recipes\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    const {\n      ingredients,\n      response\n    } = this.state;\n\n    if (response.length !== 0) {\n      return /*#__PURE__*/_jsxDEV(Item.Group, {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: recipe.link,\n          children: response.map(recipe => /*#__PURE__*/_jsxDEV(Item, {\n            children: [/*#__PURE__*/_jsxDEV(Item.Image, {\n              size: \"tiny\",\n              src: recipe.thumbnail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Item.Content, {\n              children: [/*#__PURE__*/_jsxDEV(Item.Header, {\n                children: [\" \", recipe.title, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Item.Description, {\n                children: [\" \", recipe.ingredients, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 12\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 12\n      }, this);\n    }\n  }\n\n}\n\nexport default Results; // {recipes.forEach(function(recipe) { \n//     return(<p>{recipe.ingredientsString}</p>)\n//     //console.log(recipe.ingredients)\n// })}","map":{"version":3,"sources":["/Users/user/Desktop/Fridge/React/FridgeFE/src/Results.js"],"names":["React","Header","List","Item","Results","Component","constructor","props","callApi","ingredients","state","ingredientsString","join","query","concat","response","fetch","body","json","status","Error","message","componentDidMount","then","res","setState","Recipes","catch","err","console","log","render","length","recipe","link","map","thumbnail","title"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,QAAkC,mBAAlC;;AAEA,MAAMC,OAAN,SAAsBJ,KAAK,CAACK,SAA5B,CAAsC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA6BnBC,OA7BmB,GA6BT,YAAY;AAClB,YAAMC,WAAW,GAAG,KAAKC,KAAL,CAAWD,WAA/B;AACA,YAAME,iBAAiB,GAAGF,WAAW,CAACG,IAAZ,CAAiB,GAAjB,CAA1B;AACA,YAAMC,KAAK,GAAG,gCAAgCC,MAAhC,CAAuCH,iBAAvC,CAAd;AAEA,YAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACH,KAAD,CAA5B;AACA,YAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,UAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B,MAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AAE7B,aAAOJ,IAAP;AACD,KAvCgB;;AAEf,SAAKP,KAAL,GAAa;AACTD,MAAAA,WAAW,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CADJ;AAETM,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAIH,GAPiC,CASlC;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAO,EAAAA,iBAAiB,GAAG;AAChB,SAAKd,OAAL,GACCe,IADD,CACMC,GAAG,IAAI,KAAKC,QAAL,CAAc;AAAEV,MAAAA,QAAQ,EAAES,GAAG,CAACE;AAAhB,KAAd,CADb,EAECC,KAFD,CAEOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFd;AAGH;;AAcDG,EAAAA,MAAM,GAAG;AACN,UAAM;AAACtB,MAAAA,WAAD;AAAcM,MAAAA;AAAd,QAA0B,KAAKL,KAArC;;AAEA,QAAIK,QAAQ,CAACiB,MAAT,KAAoB,CAAxB,EAA2B;AACvB,0BACA,QAAC,IAAD,CAAM,KAAN;AAAA,+BAAY;AAAG,UAAA,IAAI,EAAEC,MAAM,CAACC,IAAhB;AAAA,oBACPnB,QAAQ,CAACoB,GAAT,CAAaF,MAAM,iBACpB,QAAC,IAAD;AAAA,oCACK,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,IAAI,EAAC,MAAjB;AAAwB,cAAA,GAAG,EAAEA,MAAM,CAACG;AAApC;AAAA;AAAA;AAAA;AAAA,oBADL,eAGK,QAAC,IAAD,CAAM,OAAN;AAAA,sCACI,QAAC,IAAD,CAAM,MAAN;AAAA,gCAAeH,MAAM,CAACI,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,IAAD,CAAM,WAAN;AAAA,gCAAoBJ,MAAM,CAACxB,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHL;AAAA;AAAA;AAAA;AAAA;AAAA,kBADC;AADO;AAAA;AAAA;AAAA;AAAA;AAAZ;AAAA;AAAA;AAAA;AAAA,cADA;AAcH,KAfD,MAeO;AACH,0BACA;AAAA,+BAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cADA;AAGH;AACH;;AAjEiC;;AAqEtC,eAAeL,OAAf,C,CAIA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport { Header, List, Item} from 'semantic-ui-react'\n\nclass Results extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ingredients: ['양파', '버섯', '김치'],\n            response: [],\n        };\n    }\n\n    // componentDidMount() {\n    //     const ingredients = this.state.ingredients\n    //     const ingredientsString = ingredients.join(',')\n    //     const url = 'http://localhost:9000/?query='.concat(ingredientsString)\n\n    //     fetch(url)\n    //        .then((result) => result.json())\n    //        .then(response => {\n    //         this.setState({response: response.Recipes})\n    //       })\n    //       .catch(err => {\n    //         console.log(err);\n    //       }); \n    // }\n\n    componentDidMount() {\n        this.callApi()\n        .then(res => this.setState({ response: res.Recipes }))\n        .catch(err => console.log(err));\n    }\n\n    callApi = async () => {\n        const ingredients = this.state.ingredients\n        const ingredientsString = ingredients.join(',')\n        const query = 'http://localhost:9000/?query='.concat(ingredientsString)\n        \n        const response = await fetch(query);\n        const body = await response.json();\n        if (response.status !== 200) throw Error(body.message);\n        \n        return body;\n      };\n\n    render() {\n       const {ingredients, response} = this.state\n       \n       if (response.length !== 0) {\n           return (\n           <Item.Group><a href={recipe.link}>\n               {response.map(recipe => (\n               <Item>\n                    <Item.Image size='tiny' src={recipe.thumbnail} />\n\n                    <Item.Content>\n                        <Item.Header> {recipe.title} </Item.Header>\n                        <Item.Description> {recipe.ingredients} </Item.Description>\n                    </Item.Content>\n                </Item>\n               ))}\n           </a></Item.Group>\n           )\n       } else {\n           return(\n           <div><h3>loading...</h3></div>\n           )\n       }\n    }\n}\n\n\nexport default Results;\n\n\n\n// {recipes.forEach(function(recipe) { \n//     return(<p>{recipe.ingredientsString}</p>)\n//     //console.log(recipe.ingredients)\n// })}"]},"metadata":{},"sourceType":"module"}